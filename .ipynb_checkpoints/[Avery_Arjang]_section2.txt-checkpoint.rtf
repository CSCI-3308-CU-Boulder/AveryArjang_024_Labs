{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 Last login: Wed Jan 20 14:17:57 on ttys001\
\
The default interactive shell is now zsh.\
To update your account to use zsh, please run `chsh -s /bin/zsh`.\
For more details, please visit https://support.apple.com/kb/HT208050.\
Averys-MacBook-Pro:~ averyarjang$ docker run hello-world\
\
Hello from Docker!\
This message shows that your installation appears to be working correctly.\
\
To generate this message, Docker took the following steps:\
 1. The Docker client contacted the Docker daemon.\
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.\
    (amd64)\
 3. The Docker daemon created a new container from that image which runs the\
    executable that produces the output you are currently reading.\
 4. The Docker daemon streamed that output to the Docker client, which sent it\
    to your terminal.\
\
To try something more ambitious, you can run an Ubuntu container with:\
 $ docker run -it ubuntu bash\
\
Share images, automate workflows, and more with a free Docker ID:\
 https://hub.docker.com/\
\
For more examples and ideas, visit:\
 https://docs.docker.com/get-started/\
\
Averys-MacBook-Pro:~ averyarjang$ docker run -it ubantu bash\
Unable to find image 'ubantu:latest' locally\
docker: Error response from daemon: pull access denied for ubantu, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.\
See 'docker run --help'.\
Averys-MacBook-Pro:~ averyarjang$ docker run -it ubantu bash\
Unable to find image 'ubantu:latest' locally\
docker: Error response from daemon: pull access denied for ubantu, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.\
See 'docker run --help'.\
Averys-MacBook-Pro:~ averyarjang$ docker login\
Authenticating with existing credentials...\
Login Succeeded\
Averys-MacBook-Pro:~ averyarjang$ docker run -it ubantu bash\
Unable to find image 'ubantu:latest' locally\
docker: Error response from daemon: pull access denied for ubantu, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.\
See 'docker run --help'.\
Averys-MacBook-Pro:~ averyarjang$ docker run -it ubuantu bash\
Unable to find image 'ubuantu:latest' locally\
docker: Error response from daemon: pull access denied for ubuantu, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.\
See 'docker run --help'.\
Averys-MacBook-Pro:~ averyarjang$ docker run -it ubuntu bash\
root@c556664714a7:/# docker ps -a\
bash: docker: command not found\
root@c556664714a7:/# docker ps -a\
bash: docker: command not found\
root@c556664714a7:/# exit        \
exit\
Averys-MacBook-Pro:~ averyarjang$ docker ps -a\
CONTAINER ID   IMAGE                      COMMAND                  CREATED          STATUS                       PORTS                NAMES\
c556664714a7   ubuntu                     "bash"                   32 seconds ago   Exited (127) 7 seconds ago                        trusting_benz\
17f60873be95   hello-world                "/hello"                 2 minutes ago    Exited (0) 2 minutes ago                          jolly_goldstine\
f9b9ec4a5023   ubuntu                     "bash"                   5 minutes ago    Exited (130) 4 minutes ago                        stoic_bartik\
be4c98d174e4   hello-world                "/hello"                 5 minutes ago    Exited (0) 5 minutes ago                          sharp_yalow\
745363e3db6e   docker101tutorial:latest   "/docker-entrypoint.\'85"   5 minutes ago    Exited (0) 5 minutes ago                          friendly_chatterjee\
578d0528fbd9   ubuntu                     "bash"                   8 minutes ago    Exited (0) 5 minutes ago                          mystifying_hawking\
4da5b15383a0   hello-world                "/hello"                 8 minutes ago    Exited (0) 3 minutes ago                          condescending_goodall\
07e2669be517   docker101tutorial          "/docker-entrypoint.\'85"   15 minutes ago   Up 5 minutes                 0.0.0.0:80->80/tcp   docker-tutorial\
86df891f310b   alpine/git                 "git clone https://g\'85"   16 minutes ago   Exited (0) 16 minutes ago                         repo\
Averys-MacBook-Pro:~ averyarjang$ docker image prune\
WARNING! This will remove all dangling images.\
Are you sure you want to continue? [y/N] y\
Total reclaimed space: 0B\
Averys-MacBook-Pro:~ averyarjang$ docker ps -a\
CONTAINER ID   IMAGE                      COMMAND                  CREATED              STATUS                        PORTS                NAMES\
c556664714a7   ubuntu                     "bash"                   About a minute ago   Exited (127) 45 seconds ago                        trusting_benz\
17f60873be95   hello-world                "/hello"                 3 minutes ago        Exited (0) 3 minutes ago                           jolly_goldstine\
f9b9ec4a5023   ubuntu                     "bash"                   5 minutes ago        Exited (130) 4 minutes ago                         stoic_bartik\
be4c98d174e4   hello-world                "/hello"                 5 minutes ago        Exited (0) 5 minutes ago                           sharp_yalow\
745363e3db6e   docker101tutorial:latest   "/docker-entrypoint.\'85"   6 minutes ago        Exited (0) 6 minutes ago                           friendly_chatterjee\
578d0528fbd9   ubuntu                     "bash"                   8 minutes ago        Exited (0) 6 minutes ago                           mystifying_hawking\
4da5b15383a0   hello-world                "/hello"                 9 minutes ago        Exited (0) 4 minutes ago                           condescending_goodall\
07e2669be517   docker101tutorial          "/docker-entrypoint.\'85"   16 minutes ago       Up 6 minutes                  0.0.0.0:80->80/tcp   docker-tutorial\
86df891f310b   alpine/git                 "git clone https://g\'85"   17 minutes ago       Exited (0) 17 minutes ago                          repo\
Averys-MacBook-Pro:~ averyarjang$ docker container prune\
WARNING! This will remove all stopped containers.\
Are you sure you want to continue? [y/N] y\
Deleted Containers:\
c556664714a7e27d4035da598865d5cd935a4534eaa1fe4a15f5ef755a5fde38\
17f60873be9583542a1a2e621e029a0116d66c27d47f3e4cd9a5afe7042bb6a0\
f9b9ec4a5023cc5ad65b9e23545672bb32dbfa7fba8d5a218d4f1c68962c6e6c\
be4c98d174e4e60447da49316c2157808dbb3e059e9d3418548466cea5738813\
745363e3db6e95e7a052742ab752482f5baabc564055499d4c86665760f4717a\
578d0528fbd90471d8a19d1b85b71011d2182d43f688e31fc780f3464c30eabd\
4da5b15383a05f048a5edb0d67e7f584e005d5376e0ce286dd705f9a938aa2ed\
86df891f310b411330cd67dc118cb8fb633e6725a1ea883fca79f5ee7c33cbc0\
\
Total reclaimed space: 1.226kB\
Averys-MacBook-Pro:~ averyarjang$ docker ps -a\
CONTAINER ID   IMAGE               COMMAND                  CREATED          STATUS         PORTS                NAMES\
07e2669be517   docker101tutorial   "/docker-entrypoint.\'85"   16 minutes ago   Up 6 minutes   0.0.0.0:80->80/tcp   docker-tutorial\
Averys-MacBook-Pro:~ averyarjang$ docker ps -a\
CONTAINER ID   IMAGE               COMMAND                  CREATED          STATUS         PORTS                NAMES\
07e2669be517   docker101tutorial   "/docker-entrypoint.\'85"   17 minutes ago   Up 6 minutes   0.0.0.0:80->80/tcp   docker-tutorial\
Averys-MacBook-Pro:~ averyarjang$ docker ps -a\
CONTAINER ID   IMAGE               COMMAND                  CREATED          STATUS                      PORTS     NAMES\
07e2669be517   docker101tutorial   "/docker-entrypoint.\'85"   17 minutes ago   Exited (0) 15 seconds ago             docker-tutorial\
Averys-MacBook-Pro:~ averyarjang$ docker rm docker rm <container_name> /* replace with your container name */\
-bash: container_name: No such file or directory\
Averys-MacBook-Pro:~ averyarjang$ docker rm docker rm <docker tutoral>\
-bash: syntax error near unexpected token `newline'\
Averys-MacBook-Pro:~ averyarjang$ docker rm docker rm <docker tutoral>\
-bash: syntax error near unexpected token `newline'\
Averys-MacBook-Pro:~ averyarjang$ docker rm docker rm docker tutoral\
Error: No such container: docker\
Error: No such container: rm\
Error: No such container: docker\
Error: No such container: tutoral\
Averys-MacBook-Pro:~ averyarjang$ docker rm \
.CFUserTextEncoding             .docker/                        .vscode/                        Music/\
.DS_Store                       .dropbox/                       Applications/                   Pictures/\
.IdentityService/               .idlerc/                        Avery's Stock Experiment.ipynb  Public/\
.Trash/                         .ipynb_checkpoints/             Desktop/                        Untitled.ipynb\
.android/                       .ipython/                       Documents/                      Untitled1.ipynb\
.atom/                          .ivy2/                          Downloads/                      getting-started/\
.bash_history                   .jupyter/                       Dropbox/                        hs_err_pid7423.log\
.bash_profile                   .mono/                          HW 10.ipynb                     venv/\
.bash_sessions/                 .oracle_jre_usage/              HW 9 SUBMIT.ipynb               \
.config/                        .sbt/                           Library/                        \
.cups/                          .templateengine/                Movies/                         \
Averys-MacBook-Pro:~ averyarjang$ docker rm \
.CFUserTextEncoding             .docker/                        .vscode/                        Music/\
.DS_Store                       .dropbox/                       Applications/                   Pictures/\
.IdentityService/               .idlerc/                        Avery's Stock Experiment.ipynb  Public/\
.Trash/                         .ipynb_checkpoints/             Desktop/                        Untitled.ipynb\
.android/                       .ipython/                       Documents/                      Untitled1.ipynb\
.atom/                          .ivy2/                          Downloads/                      getting-started/\
.bash_history                   .jupyter/                       Dropbox/                        hs_err_pid7423.log\
.bash_profile                   .mono/                          HW 10.ipynb                     venv/\
.bash_sessions/                 .oracle_jre_usage/              HW 9 SUBMIT.ipynb               \
.config/                        .sbt/                           Library/                        \
.cups/                          .templateengine/                Movies/                         \
Averys-MacBook-Pro:~ averyarjang$ docker rm \
.CFUserTextEncoding             .docker/                        .vscode/                        Music/\
.DS_Store                       .dropbox/                       Applications/                   Pictures/\
.IdentityService/               .idlerc/                        Avery's Stock Experiment.ipynb  Public/\
.Trash/                         .ipynb_checkpoints/             Desktop/                        Untitled.ipynb\
.android/                       .ipython/                       Documents/                      Untitled1.ipynb\
.atom/                          .ivy2/                          Downloads/                      getting-started/\
.bash_history                   .jupyter/                       Dropbox/                        hs_err_pid7423.log\
.bash_profile                   .mono/                          HW 10.ipynb                     venv/\
.bash_sessions/                 .oracle_jre_usage/              HW 9 SUBMIT.ipynb               \
.config/                        .sbt/                           Library/                        \
.cups/                          .templateengine/                Movies/                         \
Averys-MacBook-Pro:~ averyarjang$ docker rm docker tutorial\
Error: No such container: docker\
Error: No such container: tutorial\
Averys-MacBook-Pro:~ averyarjang$ docker rm docker-tutorial\
docker-tutorial\
Averys-MacBook-Pro:~ averyarjang$ docker rm great_kare \
Error: No such container: great_kare\
Averys-MacBook-Pro:~ averyarjang$ docker rm great_kare\
Error: No such container: great_kare\
Averys-MacBook-Pro:~ averyarjang$ docker ps-a\
docker: 'ps-a' is not a docker command.\
See 'docker --help'\
Averys-MacBook-Pro:~ averyarjang$ docker ps -a\
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES\
Averys-MacBook-Pro:~ averyarjang$ container\
-bash: container: command not found\
Averys-MacBook-Pro:~ averyarjang$ docker run hello-world\
\
\
Hello from Docker!\
This message shows that your installation appears to be working correctly.\
\
To generate this message, Docker took the following steps:\
 1. The Docker client contacted the Docker daemon.\
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.\
    (amd64)\
 3. The Docker daemon created a new container from that image which runs the\
    executable that produces the output you are currently reading.\
 4. The Docker daemon streamed that output to the Docker client, which sent it\
    to your terminal.\
\
To try something more ambitious, you can run an Ubuntu container with:\
 $ docker run -it ubuntu bash\
\
Share images, automate workflows, and more with a free Docker ID:\
 https://hub.docker.com/\
\
For more examples and ideas, visit:\
 https://docs.docker.com/get-started/\
\
Averys-MacBook-Pro:~ averyarjang$ \
Averys-MacBook-Pro:~ averyarjang$ docker ps -a\
CONTAINER ID   IMAGE         COMMAND    CREATED          STATUS                      PORTS     NAMES\
7e9d85d7f20f   hello-world   "/hello"   22 seconds ago   Exited (0) 21 seconds ago             happy_austin\
Averys-MacBook-Pro:~ averyarjang$ docker rm docker tutorial\
Error: No such container: docker\
Error: No such container: tutorial\
Averys-MacBook-Pro:~ averyarjang$ docker rm docker-tutorial\
Error: No such container: docker-tutorial\
Averys-MacBook-Pro:~ averyarjang$ docker ps -a\
CONTAINER ID   IMAGE         COMMAND    CREATED         STATUS                     PORTS     NAMES\
7e9d85d7f20f   hello-world   "/hello"   2 minutes ago   Exited (0) 2 minutes ago             happy_austin\
Averys-MacBook-Pro:~ averyarjang$ docker rm happy_austin\
happy_austin\
Averys-MacBook-Pro:~ averyarjang$ docker ps -a\
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES\
Averys-MacBook-Pro:~ averyarjang$ docker run -it ubuntu bash\
root@60f586885673:/# exit\
exit\
Averys-MacBook-Pro:~ averyarjang$ docker run -dt ubuntu bash\
e7971cb9edfa651198f3c59b7b31c2c3230fb2fcc24c922d2019c17aceaf92f5\
Averys-MacBook-Pro:~ averyarjang$ docker ps\
CONTAINER ID   IMAGE     COMMAND   CREATED          STATUS          PORTS     NAMES\
e7971cb9edfa   ubuntu    "bash"    18 seconds ago   Up 17 seconds             romantic_yalow\
Averys-MacBook-Pro:~ averyarjang$ docker rm romantic_yalow\
Error response from daemon: You cannot remove a running container e7971cb9edfa651198f3c59b7b31c2c3230fb2fcc24c922d2019c17aceaf92f5. Stop the container before attempting removal or force remove\
Averys-MacBook-Pro:~ averyarjang$ docker rm f- romantic_yalow\
Error: No such container: f-\
Error response from daemon: You cannot remove a running container e7971cb9edfa651198f3c59b7b31c2c3230fb2fcc24c922d2019c17aceaf92f5. Stop the container before attempting removal or force remove\
Averys-MacBook-Pro:~ averyarjang$ docker rm -f romantic_yalow\
romantic_yalow\
Averys-MacBook-Pro:~ averyarjang$ docker --help\
\
Usage:  docker [OPTIONS] COMMAND\
\
A self-sufficient runtime for containers\
\
Options:\
      --config string      Location of client config files (default "/Users/averyarjang/.docker")\
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set\
                           with "docker context use")\
  -D, --debug              Enable debug mode\
  -H, --host list          Daemon socket(s) to connect to\
  -l, --log-level string   Set the logging level ("debug"|"info"|"warn"|"error"|"fatal") (default "info")\
      --tls                Use TLS; implied by --tlsverify\
      --tlscacert string   Trust certs signed only by this CA (default "/Users/averyarjang/.docker/ca.pem")\
      --tlscert string     Path to TLS certificate file (default "/Users/averyarjang/.docker/cert.pem")\
      --tlskey string      Path to TLS key file (default "/Users/averyarjang/.docker/key.pem")\
      --tlsverify          Use TLS and verify the remote\
  -v, --version            Print version information and quit\
\
Management Commands:\
  app*        Docker App (Docker Inc., v0.9.1-beta3)\
  builder     Manage builds\
  buildx*     Build with BuildKit (Docker Inc., v0.5.1-docker)\
  config      Manage Docker configs\
  container   Manage containers\
  context     Manage contexts\
  image       Manage images\
  manifest    Manage Docker image manifests and manifest lists\
  network     Manage networks\
  node        Manage Swarm nodes\
  plugin      Manage plugins\
  scan*       Docker Scan (Docker Inc., v0.5.0)\
  secret      Manage Docker secrets\
  service     Manage services\
  stack       Manage Docker stacks\
  swarm       Manage Swarm\
  system      Manage Docker\
  trust       Manage trust on Docker images\
  volume      Manage volumes\
\
Commands:\
  attach      Attach local standard input, output, and error streams to a running container\
  build       Build an image from a Dockerfile\
  commit      Create a new image from a container's changes\
  cp          Copy files/folders between a container and the local filesystem\
  create      Create a new container\
  diff        Inspect changes to files or directories on a container's filesystem\
  events      Get real time events from the server\
  exec        Run a command in a running container\
  export      Export a container's filesystem as a tar archive\
  history     Show the history of an image\
  images      List images\
  import      Import the contents from a tarball to create a filesystem image\
  info        Display system-wide information\
  inspect     Return low-level information on Docker objects\
  kill        Kill one or more running containers\
  load        Load an image from a tar archive or STDIN\
  login       Log in to a Docker registry\
  logout      Log out from a Docker registry\
  logs        Fetch the logs of a container\
  pause       Pause all processes within one or more containers\
  port        List port mappings or a specific mapping for the container\
  ps          List containers\
  pull        Pull an image or a repository from a registry\
  push        Push an image or a repository to a registry\
  rename      Rename a container\
  restart     Restart one or more containers\
  rm          Remove one or more containers\
  rmi         Remove one or more images\
  run         Run a command in a new container\
  save        Save one or more images to a tar archive (streamed to STDOUT by default)\
  search      Search the Docker Hub for images\
  start       Start one or more stopped containers\
  stats       Display a live stream of container(s) resource usage statistics\
  stop        Stop one or more running containers\
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE\
  top         Display the running processes of a container\
  unpause     Unpause all processes within one or more containers\
  update      Update configuration of one or more containers\
  version     Show the Docker version information\
  wait        Block until one or more containers stop, then print their exit codes\
\
Run 'docker COMMAND --help' for more information on a command.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b To get more help with docker, check out our guides at https://docs.docker.com/go/guides/
\f0\b0 \
Averys-MacBook-Pro:~ averyarjang$ docker COMMAND --help\
\
Usage:  docker [OPTIONS] COMMAND\
\
A self-sufficient runtime for containers\
\
Options:\
      --config string      Location of client config files (default "/Users/averyarjang/.docker")\
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set\
                           with "docker context use")\
  -D, --debug              Enable debug mode\
  -H, --host list          Daemon socket(s) to connect to\
  -l, --log-level string   Set the logging level ("debug"|"info"|"warn"|"error"|"fatal") (default "info")\
      --tls                Use TLS; implied by --tlsverify\
      --tlscacert string   Trust certs signed only by this CA (default "/Users/averyarjang/.docker/ca.pem")\
      --tlscert string     Path to TLS certificate file (default "/Users/averyarjang/.docker/cert.pem")\
      --tlskey string      Path to TLS key file (default "/Users/averyarjang/.docker/key.pem")\
      --tlsverify          Use TLS and verify the remote\
  -v, --version            Print version information and quit\
\
Management Commands:\
  app*        Docker App (Docker Inc., v0.9.1-beta3)\
  builder     Manage builds\
  buildx*     Build with BuildKit (Docker Inc., v0.5.1-docker)\
  config      Manage Docker configs\
  container   Manage containers\
  context     Manage contexts\
  image       Manage images\
  manifest    Manage Docker image manifests and manifest lists\
  network     Manage networks\
  node        Manage Swarm nodes\
  plugin      Manage plugins\
  scan*       Docker Scan (Docker Inc., v0.5.0)\
  secret      Manage Docker secrets\
  service     Manage services\
  stack       Manage Docker stacks\
  swarm       Manage Swarm\
  system      Manage Docker\
  trust       Manage trust on Docker images\
  volume      Manage volumes\
\
Commands:\
  attach      Attach local standard input, output, and error streams to a running container\
  build       Build an image from a Dockerfile\
  commit      Create a new image from a container's changes\
  cp          Copy files/folders between a container and the local filesystem\
  create      Create a new container\
  diff        Inspect changes to files or directories on a container's filesystem\
  events      Get real time events from the server\
  exec        Run a command in a running container\
  export      Export a container's filesystem as a tar archive\
  history     Show the history of an image\
  images      List images\
  import      Import the contents from a tarball to create a filesystem image\
  info        Display system-wide information\
  inspect     Return low-level information on Docker objects\
  kill        Kill one or more running containers\
  load        Load an image from a tar archive or STDIN\
  login       Log in to a Docker registry\
  logout      Log out from a Docker registry\
  logs        Fetch the logs of a container\
  pause       Pause all processes within one or more containers\
  port        List port mappings or a specific mapping for the container\
  ps          List containers\
  pull        Pull an image or a repository from a registry\
  push        Push an image or a repository to a registry\
  rename      Rename a container\
  restart     Restart one or more containers\
  rm          Remove one or more containers\
  rmi         Remove one or more images\
  run         Run a command in a new container\
  save        Save one or more images to a tar archive (streamed to STDOUT by default)\
  search      Search the Docker Hub for images\
  start       Start one or more stopped containers\
  stats       Display a live stream of container(s) resource usage statistics\
  stop        Stop one or more running containers\
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE\
  top         Display the running processes of a container\
  unpause     Unpause all processes within one or more containers\
  update      Update configuration of one or more containers\
  version     Show the Docker version information\
  wait        Block until one or more containers stop, then print their exit codes\
\
Run 'docker COMMAND --help' for more information on a command.\
\

\f1\b To get more help with docker, check out our guides at https://docs.docker.com/go/guides/
\f0\b0 \
Averys-MacBook-Pro:~ averyarjang$ \
}